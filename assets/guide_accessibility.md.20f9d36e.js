import{_ as e,b as s,e as t,m as o}from"./app.73ffecad.js";const F=JSON.parse('{"title":"Accessibility","description":"","frontmatter":{},"headers":[{"level":2,"title":"Recommendations","slug":"recommendations","link":"#recommendations","children":[]},{"level":2,"title":"Keyboard controls","slug":"keyboard-controls","link":"#keyboard-controls","children":[]}],"relativePath":"guide/accessibility.md"}'),n={name:"guide/accessibility.md"},a=o(`<h1 id="accessibility" tabindex="-1">Accessibility <a class="header-anchor" href="#accessibility" aria-hidden="true">#</a></h1><p>The component was build with accessibility in mind. It uses the right HTML element (<code>ul</code>, <code>li</code>, <code>nav</code>, <code>button</code>) to be SEO friendly and so, accessibility friendly.</p><p>The structure respects the ARIA Menu pattern and ARIA recommendations. Current menu is only focusable thanks of the use of <code>tabindex=&quot;-1&quot;</code> attribute on non active menu elements. Also, <code>role</code> attributes <code>menu</code>, <code>menuitem</code> and <code>none</code> are use.</p><blockquote><p>Feel free to make a PR or an issue if something is wrong about accessibility. It&#39;s really important to make the web accessible to everyone.</p></blockquote><h2 id="recommendations" tabindex="-1">Recommendations <a class="header-anchor" href="#recommendations" aria-hidden="true">#</a></h2><p>It&#39;s primordial to label the <strong>ZoomAvant</strong> drilldown. To do that, add an <code>aria-label</code> attribute to the root element like this:</p><div class="language-vue-html"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ZAvant</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">aria-label</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Mobile menu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">ZAvant</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>If you have a title which describe the menu, you can use the <code>aria-labelledby</code> attribute.</p><div class="language-vue-html"><button title="Copy Code" class="copy"></button><span class="lang">template</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;"> </span><span style="color:#F78C6C;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mobile-menu-label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Mobile menu</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">ZAvant</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">aria-labelledby</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">mobile-menu-label</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">ZAvant</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="keyboard-controls" tabindex="-1">Keyboard controls <a class="header-anchor" href="#keyboard-controls" aria-hidden="true">#</a></h2><p>You can control <strong>ZoomAvant</strong> with your keyboard.</p><ul><li>Arrow Up / Tab + Shift: Go to the item element</li><li>Arrow Down / Tab: Go to the item element</li><li>Enter / Space : <ul><li>Access to the next menu if you are on the Next button</li><li>Access to the previous menu if you are on the Back button</li></ul></li><li>Escape: Return to the previous menu</li><li>A letter: Focus on the first item with first letter</li><li>Home: <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul></li><li>End: <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul></li><li>Any key that corresponds to a printable character: Move focus to the next item in the current menu whose label begins with that printable character.</li></ul>`,12),l=[a];function i(c,r,p,d,u,y){return s(),t("div",null,l)}const b=e(n,[["render",i]]);export{F as __pageData,b as default};
